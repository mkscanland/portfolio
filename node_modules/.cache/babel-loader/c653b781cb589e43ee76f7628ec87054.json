{"ast":null,"code":"import { extend, isArray, toNumber, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\n\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n\n    this.active = true;\n    /**\n     * @internal\n     */\n\n    this.effects = [];\n    /**\n     * @internal\n     */\n\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n    }\n  }\n\n  run(fn) {\n    if (this.active) {\n      const currentEffectScope = activeEffectScope;\n\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n\n\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n\n\n  off() {\n    activeEffectScope = this.parent;\n  }\n\n  stop(fromParent) {\n    if (this.active) {\n      let i, l;\n\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      } // nested scope, dereference from parent to avoid memory leaks\n\n\n      if (!this.detached && this.parent && !fromParent) {\n        // optimized O(1) removal\n        const last = this.parent.scopes.pop();\n\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n\n      this.parent = undefined;\n      this.active = false;\n    }\n  }\n\n}\n\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\n\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\n\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\n\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(`onScopeDispose() is called when there is no active effect scope` + ` to be associated with.`);\n  }\n}\n\nconst createDep = effects => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\n\nconst wasTracked = dep => (dep.w & trackOpBit) > 0;\n\nconst newTracked = dep => (dep.n & trackOpBit) > 0;\n\nconst initDepMarkers = ({\n  deps\n}) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit; // set was tracked\n    }\n  }\n};\n\nconst finalizeDepMarkers = effect => {\n  const {\n    deps\n  } = effect;\n\n  if (deps.length) {\n    let ptr = 0;\n\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      } // clear bits\n\n\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = new WeakMap(); // The number of effects currently being tracked recursively.\n\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\n/**\n * The bitwise track markers support at most 30 levels of recursion.\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\n * When recursion depth is greater, fall back to using a full cleanup.\n */\n\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(process.env.NODE_ENV !== 'production' ? 'iterate' : '');\nconst MAP_KEY_ITERATE_KEY = Symbol(process.env.NODE_ENV !== 'production' ? 'Map key iterate' : '');\n\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = undefined;\n    recordEffectScope(this, scope);\n  }\n\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n\n      parent = parent.parent;\n    }\n\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = undefined;\n\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n\n  stop() {\n    // stopped while running itself - defer the cleanup\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n\n      if (this.onStop) {\n        this.onStop();\n      }\n\n      this.active = false;\n    }\n  }\n\n}\n\nfunction cleanupEffect(effect) {\n  const {\n    deps\n  } = effect;\n\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect);\n    }\n\n    deps.length = 0;\n  }\n}\n\nfunction effect(fn, options) {\n  if (fn.effect) {\n    fn = fn.effect.fn;\n  }\n\n  const _effect = new ReactiveEffect(fn);\n\n  if (options) {\n    extend(_effect, options);\n    if (options.scope) recordEffectScope(_effect, options.scope);\n  }\n\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n\n  const runner = _effect.run.bind(_effect);\n\n  runner.effect = _effect;\n  return runner;\n}\n\nfunction stop(runner) {\n  runner.effect.stop();\n}\n\nlet shouldTrack = true;\nconst trackStack = [];\n\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\n\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\n\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === undefined ? true : last;\n}\n\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n\n    if (!depsMap) {\n      targetMap.set(target, depsMap = new Map());\n    }\n\n    let dep = depsMap.get(key);\n\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n\n    const eventInfo = process.env.NODE_ENV !== 'production' ? {\n      effect: activeEffect,\n      target,\n      type,\n      key\n    } : undefined;\n    trackEffects(dep, eventInfo);\n  }\n}\n\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack = false;\n\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit; // set newly tracked\n\n      shouldTrack = !wasTracked(dep);\n    }\n  } else {\n    // Full cleanup mode.\n    shouldTrack = !dep.has(activeEffect);\n  }\n\n  if (shouldTrack) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n\n    if (process.env.NODE_ENV !== 'production' && activeEffect.onTrack) {\n      activeEffect.onTrack(Object.assign({\n        effect: activeEffect\n      }, debuggerEventExtraInfo));\n    }\n  }\n}\n\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n\n  if (!depsMap) {\n    // never been tracked\n    return;\n  }\n\n  let deps = [];\n\n  if (type === \"clear\"\n  /* TriggerOpTypes.CLEAR */\n  ) {\n    // collection being cleared\n    // trigger all effects for target\n    deps = [...depsMap.values()];\n  } else if (key === 'length' && isArray(target)) {\n    const newLength = toNumber(newValue);\n    depsMap.forEach((dep, key) => {\n      if (key === 'length' || key >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    // schedule runs for SET | ADD | DELETE\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    } // also run for iteration key on ADD | DELETE | Map.SET\n\n\n    switch (type) {\n      case \"add\"\n      /* TriggerOpTypes.ADD */\n      :\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          // new index added to array -> length changes\n          deps.push(depsMap.get('length'));\n        }\n\n        break;\n\n      case \"delete\"\n      /* TriggerOpTypes.DELETE */\n      :\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n\n        break;\n\n      case \"set\"\n      /* TriggerOpTypes.SET */\n      :\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n\n        break;\n    }\n  }\n\n  const eventInfo = process.env.NODE_ENV !== 'production' ? {\n    target,\n    type,\n    key,\n    newValue,\n    oldValue,\n    oldTarget\n  } : undefined;\n\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (process.env.NODE_ENV !== 'production') {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\n\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  // spread into array for stabilization\n  const effects = isArray(dep) ? dep : [...dep];\n\n  for (const effect of effects) {\n    if (effect.computed) {\n      triggerEffect(effect, debuggerEventExtraInfo);\n    }\n  }\n\n  for (const effect of effects) {\n    if (!effect.computed) {\n      triggerEffect(effect, debuggerEventExtraInfo);\n    }\n  }\n}\n\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\n  if (effect !== activeEffect || effect.allowRecurse) {\n    if (process.env.NODE_ENV !== 'production' && effect.onTrigger) {\n      effect.onTrigger(extend({\n        effect\n      }, debuggerEventExtraInfo));\n    }\n\n    if (effect.scheduler) {\n      effect.scheduler();\n    } else {\n      effect.run();\n    }\n  }\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set( /*#__PURE__*/Object.getOwnPropertyNames(Symbol) // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n// but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n// function\n.filter(key => key !== 'arguments' && key !== 'caller').map(key => Symbol[key]).filter(isSymbol));\nconst get = /*#__PURE__*/createGetter();\nconst shallowGet = /*#__PURE__*/createGetter(false, true);\nconst readonlyGet = /*#__PURE__*/createGetter(true);\nconst shallowReadonlyGet = /*#__PURE__*/createGetter(true, true);\nconst arrayInstrumentations = /*#__PURE__*/createArrayInstrumentations();\n\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\n    instrumentations[key] = function (...args) {\n      const arr = toRaw(this);\n\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\"\n        /* TrackOpTypes.GET */\n        , i + '');\n      } // we run the method using the original args first (which may be reactive)\n\n\n      const res = arr[key](...args);\n\n      if (res === -1 || res === false) {\n        // if that didn't work, run it again using raw values.\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\n    instrumentations[key] = function (...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\n\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target, key, receiver) {\n    if (key === \"__v_isReactive\"\n    /* ReactiveFlags.IS_REACTIVE */\n    ) {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\"\n    /* ReactiveFlags.IS_READONLY */\n    ) {\n      return isReadonly;\n    } else if (key === \"__v_isShallow\"\n    /* ReactiveFlags.IS_SHALLOW */\n    ) {\n      return shallow;\n    } else if (key === \"__v_raw\"\n    /* ReactiveFlags.RAW */\n    && receiver === (isReadonly ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n\n    const targetIsArray = isArray(target);\n\n    if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver);\n    }\n\n    const res = Reflect.get(target, key, receiver);\n\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n\n    if (!isReadonly) {\n      track(target, \"get\"\n      /* TrackOpTypes.GET */\n      , key);\n    }\n\n    if (shallow) {\n      return res;\n    }\n\n    if (isRef(res)) {\n      // ref unwrapping - skip unwrap for Array + integer key.\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n\n    if (isObject(res)) {\n      // Convert returned value into a proxy as well. we do the isObject check\n      // here to avoid invalid value warning. Also need to lazy access readonly\n      // and reactive here to avoid circular dependency.\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n\n    return res;\n  };\n}\n\nconst set = /*#__PURE__*/createSetter();\nconst shallowSet = /*#__PURE__*/createSetter(true);\n\nfunction createSetter(shallow = false) {\n  return function set(target, key, value, receiver) {\n    let oldValue = target[key];\n\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n\n    if (!shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver); // don't trigger if target is something up in the prototype chain of original\n\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\"\n        /* TriggerOpTypes.ADD */\n        , key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\"\n        /* TriggerOpTypes.SET */\n        , key, value, oldValue);\n      }\n    }\n\n    return result;\n  };\n}\n\nfunction deleteProperty(target, key) {\n  const hadKey = hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n\n  if (result && hadKey) {\n    trigger(target, \"delete\"\n    /* TriggerOpTypes.DELETE */\n    , key, undefined, oldValue);\n  }\n\n  return result;\n}\n\nfunction has(target, key) {\n  const result = Reflect.has(target, key);\n\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\"\n    /* TrackOpTypes.HAS */\n    , key);\n  }\n\n  return result;\n}\n\nfunction ownKeys(target) {\n  track(target, \"iterate\"\n  /* TrackOpTypes.ITERATE */\n  , isArray(target) ? 'length' : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\n\nconst mutableHandlers = {\n  get,\n  set,\n  deleteProperty,\n  has,\n  ownKeys\n};\nconst readonlyHandlers = {\n  get: readonlyGet,\n\n  set(target, key) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n    }\n\n    return true;\n  },\n\n  deleteProperty(target, key) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n    }\n\n    return true;\n  }\n\n};\nconst shallowReactiveHandlers = /*#__PURE__*/extend({}, mutableHandlers, {\n  get: shallowGet,\n  set: shallowSet\n}); // Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\n\nconst shallowReadonlyHandlers = /*#__PURE__*/extend({}, readonlyHandlers, {\n  get: shallowReadonlyGet\n});\n\nconst toShallow = value => value;\n\nconst getProto = v => Reflect.getPrototypeOf(v);\n\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\n  // of the value\n  target = target[\"__v_raw\"\n  /* ReactiveFlags.RAW */\n  ];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"get\"\n      /* TrackOpTypes.GET */\n      , key);\n    }\n\n    track(rawTarget, \"get\"\n    /* TrackOpTypes.GET */\n    , rawKey);\n  }\n\n  const {\n    has\n  } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n\n  if (has.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    // #3602 readonly(reactive(Map))\n    // ensure that the nested reactive `Map` can do tracking for itself\n    target.get(key);\n  }\n}\n\nfunction has$1(key, isReadonly = false) {\n  const target = this[\"__v_raw\"\n  /* ReactiveFlags.RAW */\n  ];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"has\"\n      /* TrackOpTypes.HAS */\n      , key);\n    }\n\n    track(rawTarget, \"has\"\n    /* TrackOpTypes.HAS */\n    , rawKey);\n  }\n\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\n\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"\n  /* ReactiveFlags.RAW */\n  ];\n  !isReadonly && track(toRaw(target), \"iterate\"\n  /* TrackOpTypes.ITERATE */\n  , ITERATE_KEY);\n  return Reflect.get(target, 'size', target);\n}\n\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\"\n    /* TriggerOpTypes.ADD */\n    , value, value);\n  }\n\n  return this;\n}\n\nfunction set$1(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const {\n    has,\n    get\n  } = getProto(target);\n  let hadKey = has.call(target, key);\n\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has.call(target, key);\n  } else if (process.env.NODE_ENV !== 'production') {\n    checkIdentityKeys(target, has, key);\n  }\n\n  const oldValue = get.call(target, key);\n  target.set(key, value);\n\n  if (!hadKey) {\n    trigger(target, \"add\"\n    /* TriggerOpTypes.ADD */\n    , key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\"\n    /* TriggerOpTypes.SET */\n    , key, value, oldValue);\n  }\n\n  return this;\n}\n\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const {\n    has,\n    get\n  } = getProto(target);\n  let hadKey = has.call(target, key);\n\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has.call(target, key);\n  } else if (process.env.NODE_ENV !== 'production') {\n    checkIdentityKeys(target, has, key);\n  }\n\n  const oldValue = get ? get.call(target, key) : undefined; // forward the operation before queueing reactions\n\n  const result = target.delete(key);\n\n  if (hadKey) {\n    trigger(target, \"delete\"\n    /* TriggerOpTypes.DELETE */\n    , key, undefined, oldValue);\n  }\n\n  return result;\n}\n\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = process.env.NODE_ENV !== 'production' ? isMap(target) ? new Map(target) : new Set(target) : undefined; // forward the operation before queueing reactions\n\n  const result = target.clear();\n\n  if (hadItems) {\n    trigger(target, \"clear\"\n    /* TriggerOpTypes.CLEAR */\n    , undefined, undefined, oldTarget);\n  }\n\n  return result;\n}\n\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"\n    /* ReactiveFlags.RAW */\n    ];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\"\n    /* TrackOpTypes.ITERATE */\n    , ITERATE_KEY);\n    return target.forEach((value, key) => {\n      // important: make sure the callback is\n      // 1. invoked with the reactive map as `this` and 3rd arg\n      // 2. the value received should be a corresponding reactive/readonly.\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\n\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function (...args) {\n    const target = this[\"__v_raw\"\n    /* ReactiveFlags.RAW */\n    ];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === 'entries' || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === 'keys' && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\"\n    /* TrackOpTypes.ITERATE */\n    , isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY); // return a wrapped iterator which returns observed versions of the\n    // values emitted from the real iterator\n\n    return {\n      // iterator protocol\n      next() {\n        const {\n          value,\n          done\n        } = innerIterator.next();\n        return done ? {\n          value,\n          done\n        } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n\n    };\n  };\n}\n\nfunction createReadonlyMethod(type) {\n  return function (...args) {\n    if (process.env.NODE_ENV !== 'production') {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\n    }\n\n    return type === \"delete\"\n    /* TriggerOpTypes.DELETE */\n    ? false : this;\n  };\n}\n\nfunction createInstrumentations() {\n  const mutableInstrumentations = {\n    get(key) {\n      return get$1(this, key);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations = {\n    get(key) {\n      return get$1(this, key, false, true);\n    },\n\n    get size() {\n      return size(this);\n    },\n\n    has: has$1,\n    add,\n    set: set$1,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations = {\n    get(key) {\n      return get$1(this, key, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n\n    add: createReadonlyMethod(\"add\"\n    /* TriggerOpTypes.ADD */\n    ),\n    set: createReadonlyMethod(\"set\"\n    /* TriggerOpTypes.SET */\n    ),\n    delete: createReadonlyMethod(\"delete\"\n    /* TriggerOpTypes.DELETE */\n    ),\n    clear: createReadonlyMethod(\"clear\"\n    /* TriggerOpTypes.CLEAR */\n    ),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations = {\n    get(key) {\n      return get$1(this, key, true, true);\n    },\n\n    get size() {\n      return size(this, true);\n    },\n\n    has(key) {\n      return has$1.call(this, key, true);\n    },\n\n    add: createReadonlyMethod(\"add\"\n    /* TriggerOpTypes.ADD */\n    ),\n    set: createReadonlyMethod(\"set\"\n    /* TriggerOpTypes.SET */\n    ),\n    delete: createReadonlyMethod(\"delete\"\n    /* TriggerOpTypes.DELETE */\n    ),\n    clear: createReadonlyMethod(\"clear\"\n    /* TriggerOpTypes.CLEAR */\n    ),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n  iteratorMethods.forEach(method => {\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n  });\n  return [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations];\n}\n\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/createInstrumentations();\n\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\"\n    /* ReactiveFlags.IS_REACTIVE */\n    ) {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\"\n    /* ReactiveFlags.IS_READONLY */\n    ) {\n      return isReadonly;\n    } else if (key === \"__v_raw\"\n    /* ReactiveFlags.RAW */\n    ) {\n      return target;\n    }\n\n    return Reflect.get(hasOwn(instrumentations, key) && key in target ? instrumentations : target, key, receiver);\n  };\n}\n\nconst mutableCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /*#__PURE__*/createInstrumentationGetter(true, true)\n};\n\nfunction checkIdentityKeys(target, has, key) {\n  const rawKey = toRaw(key);\n\n  if (rawKey !== key && has.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(`Reactive ${type} contains both the raw and reactive ` + `versions of the same object${type === `Map` ? ` as keys` : ``}, ` + `which can lead to inconsistencies. ` + `Avoid differentiating between the raw and reactive versions ` + `of an object and only use the reactive version if possible.`);\n  }\n}\n\nconst reactiveMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\n\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return 1\n      /* TargetType.COMMON */\n      ;\n\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return 2\n      /* TargetType.COLLECTION */\n      ;\n\n    default:\n      return 0\n      /* TargetType.INVALID */\n      ;\n  }\n}\n\nfunction getTargetType(value) {\n  return value[\"__v_skip\"\n  /* ReactiveFlags.SKIP */\n  ] || !Object.isExtensible(value) ? 0\n  /* TargetType.INVALID */\n  : targetTypeMap(toRawType(value));\n}\n\nfunction reactive(target) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (isReadonly(target)) {\n    return target;\n  }\n\n  return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\n * Return a shallowly-reactive copy of the original object, where only the root\n * level properties are reactive. It also does not auto-unwrap refs (even at the\n * root level).\n */\n\n\nfunction shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\n * Creates a readonly copy of the original object. Note the returned copy is not\n * made reactive, but `readonly` can be called on an already reactive object.\n */\n\n\nfunction readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\n * Returns a reactive-copy of the original object, where only the root level\n * properties are readonly, and does NOT unwrap refs nor recursively convert\n * returned properties.\n * This is used for creating the props proxy object for stateful components.\n */\n\n\nfunction shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\n\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n\n    return target;\n  } // target is already a Proxy, return it.\n  // exception: calling readonly() on a reactive object\n\n\n  if (target[\"__v_raw\"\n  /* ReactiveFlags.RAW */\n  ] && !(isReadonly && target[\"__v_isReactive\"\n  /* ReactiveFlags.IS_REACTIVE */\n  ])) {\n    return target;\n  } // target already has corresponding Proxy\n\n\n  const existingProxy = proxyMap.get(target);\n\n  if (existingProxy) {\n    return existingProxy;\n  } // only specific value types can be observed.\n\n\n  const targetType = getTargetType(target);\n\n  if (targetType === 0\n  /* TargetType.INVALID */\n  ) {\n    return target;\n  }\n\n  const proxy = new Proxy(target, targetType === 2\n  /* TargetType.COLLECTION */\n  ? collectionHandlers : baseHandlers);\n  proxyMap.set(target, proxy);\n  return proxy;\n}\n\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"\n    /* ReactiveFlags.RAW */\n    ]);\n  }\n\n  return !!(value && value[\"__v_isReactive\"\n  /* ReactiveFlags.IS_REACTIVE */\n  ]);\n}\n\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"\n  /* ReactiveFlags.IS_READONLY */\n  ]);\n}\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"\n  /* ReactiveFlags.IS_SHALLOW */\n  ]);\n}\n\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\n\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"\n  /* ReactiveFlags.RAW */\n  ];\n  return raw ? toRaw(raw) : observed;\n}\n\nfunction markRaw(value) {\n  def(value, \"__v_skip\"\n  /* ReactiveFlags.SKIP */\n  , true);\n  return value;\n}\n\nconst toReactive = value => isObject(value) ? reactive(value) : value;\n\nconst toReadonly = value => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\n  if (shouldTrack && activeEffect) {\n    ref = toRaw(ref);\n\n    if (process.env.NODE_ENV !== 'production') {\n      trackEffects(ref.dep || (ref.dep = createDep()), {\n        target: ref,\n        type: \"get\"\n        /* TrackOpTypes.GET */\n        ,\n        key: 'value'\n      });\n    } else {\n      trackEffects(ref.dep || (ref.dep = createDep()));\n    }\n  }\n}\n\nfunction triggerRefValue(ref, newVal) {\n  ref = toRaw(ref);\n\n  if (ref.dep) {\n    if (process.env.NODE_ENV !== 'production') {\n      triggerEffects(ref.dep, {\n        target: ref,\n        type: \"set\"\n        /* TriggerOpTypes.SET */\n        ,\n        key: 'value',\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(ref.dep);\n    }\n  }\n}\n\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\n\nfunction ref(value) {\n  return createRef(value, false);\n}\n\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\n\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n\n  return new RefImpl(rawValue, shallow);\n}\n\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = undefined;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n\n}\n\nfunction triggerRef(ref) {\n  triggerRefValue(ref, process.env.NODE_ENV !== 'production' ? ref.value : void 0);\n}\n\nfunction unref(ref) {\n  return isRef(ref) ? ref.value : ref;\n}\n\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\n\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\n\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = undefined;\n    this.__v_isRef = true;\n    const {\n      get,\n      set\n    } = factory(() => trackRefValue(this), () => triggerRefValue(this));\n    this._get = get;\n    this._set = set;\n  }\n\n  get value() {\n    return this._get();\n  }\n\n  set value(newVal) {\n    this._set(newVal);\n  }\n\n}\n\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\n\nfunction toRefs(object) {\n  if (process.env.NODE_ENV !== 'production' && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n\n  const ret = isArray(object) ? new Array(object.length) : {};\n\n  for (const key in object) {\n    ret[key] = toRef(object, key);\n  }\n\n  return ret;\n}\n\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n\n  get value() {\n    const val = this._object[this._key];\n    return val === undefined ? this._defaultValue : val;\n  }\n\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n\n}\n\nfunction toRef(object, key, defaultValue) {\n  const val = object[key];\n  return isRef(val) ? val : new ObjectRefImpl(object, key, defaultValue);\n}\n\nvar _a;\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = undefined;\n    this.__v_isRef = true;\n    this[_a] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"\n    /* ReactiveFlags.IS_READONLY */\n    ] = isReadonly;\n  }\n\n  get value() {\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n    const self = toRaw(this);\n    trackRefValue(self);\n\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n\n    return self._value;\n  }\n\n  set value(newValue) {\n    this._setter(newValue);\n  }\n\n}\n\n_a = \"__v_isReadonly\"\n/* ReactiveFlags.IS_READONLY */\n;\n\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = process.env.NODE_ENV !== 'production' ? () => {\n      console.warn('Write operation failed: computed value is readonly');\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n\n  if (process.env.NODE_ENV !== 'production' && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n\n  return cRef;\n}\n\nvar _a$1;\n\nconst tick = /*#__PURE__*/Promise.resolve();\nconst queue = [];\nlet queued = false;\n\nconst scheduler = fn => {\n  queue.push(fn);\n\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\n\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n\n  queue.length = 0;\n  queued = false;\n};\n\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = undefined;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[_a$1] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, computedTrigger => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n\n            scheduled = false;\n          });\n        } // chained upstream computeds are notified synchronously to ensure\n        // value invalidation in case of sync access; normal effects are\n        // deferred to be triggered in scheduler.\n\n\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(true\n            /* computedTrigger */\n            );\n          }\n        }\n      }\n\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n\n    return this._value;\n  }\n\n  get value() {\n    trackRefValue(this); // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n\n    return toRaw(this)._get();\n  }\n\n}\n\n_a$1 = \"__v_isReadonly\"\n/* ReactiveFlags.IS_READONLY */\n;\n\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };","map":{"version":3,"sources":["C:/VueProjects/portfolio/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js"],"names":["extend","isArray","toNumber","isMap","isIntegerKey","hasOwn","isSymbol","isObject","hasChanged","makeMap","capitalize","toRawType","def","isFunction","NOOP","warn","msg","args","console","activeEffectScope","EffectScope","constructor","detached","active","effects","cleanups","parent","index","scopes","push","run","fn","currentEffectScope","process","env","NODE_ENV","on","off","stop","fromParent","i","l","length","last","pop","undefined","effectScope","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","dep","Set","w","n","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","delete","targetMap","WeakMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","lastShouldTrack","shouldTrack","cleanupEffect","deferStop","onStop","options","_effect","lazy","runner","bind","trackStack","pauseTracking","enableTracking","resetTracking","track","target","type","key","depsMap","get","set","Map","eventInfo","trackEffects","debuggerEventExtraInfo","has","add","onTrack","Object","assign","trigger","newValue","oldValue","oldTarget","values","newLength","forEach","triggerEffects","computed","triggerEffect","allowRecurse","onTrigger","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","map","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","arr","toRaw","res","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","value","readonly","reactive","createSetter","shallowSet","isShallow","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","String","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","v","getPrototypeOf","get$1","rawTarget","rawKey","wrap","toReadonly","toReactive","call","has$1","size","proto","set$1","checkIdentityKeys","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","shallowReadonly","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref","triggerRefValue","newVal","r","__v_isRef","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","triggerRef","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","toRefs","object","ret","Array","toRef","ObjectRefImpl","_object","_key","_defaultValue","val","defaultValue","_a","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","getterOrOptions","debugOptions","setter","onlyGetter","cRef","_a$1","tick","Promise","resolve","queue","queued","then","flush","DeferredComputedRefImpl","compareTarget","hasCompareTarget","scheduled","computedTrigger","valueToCompare","e","deferredComputed"],"mappings":"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","sourcesContent":["import { extend, isArray, toNumber, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n    console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n    constructor(detached = false) {\n        this.detached = detached;\n        /**\n         * @internal\n         */\n        this.active = true;\n        /**\n         * @internal\n         */\n        this.effects = [];\n        /**\n         * @internal\n         */\n        this.cleanups = [];\n        this.parent = activeEffectScope;\n        if (!detached && activeEffectScope) {\n            this.index =\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n        }\n    }\n    run(fn) {\n        if (this.active) {\n            const currentEffectScope = activeEffectScope;\n            try {\n                activeEffectScope = this;\n                return fn();\n            }\n            finally {\n                activeEffectScope = currentEffectScope;\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`cannot run an inactive effect scope.`);\n        }\n    }\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    on() {\n        activeEffectScope = this;\n    }\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    off() {\n        activeEffectScope = this.parent;\n    }\n    stop(fromParent) {\n        if (this.active) {\n            let i, l;\n            for (i = 0, l = this.effects.length; i < l; i++) {\n                this.effects[i].stop();\n            }\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\n                this.cleanups[i]();\n            }\n            if (this.scopes) {\n                for (i = 0, l = this.scopes.length; i < l; i++) {\n                    this.scopes[i].stop(true);\n                }\n            }\n            // nested scope, dereference from parent to avoid memory leaks\n            if (!this.detached && this.parent && !fromParent) {\n                // optimized O(1) removal\n                const last = this.parent.scopes.pop();\n                if (last && last !== this) {\n                    this.parent.scopes[this.index] = last;\n                    last.index = this.index;\n                }\n            }\n            this.parent = undefined;\n            this.active = false;\n        }\n    }\n}\nfunction effectScope(detached) {\n    return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n    if (scope && scope.active) {\n        scope.effects.push(effect);\n    }\n}\nfunction getCurrentScope() {\n    return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n    if (activeEffectScope) {\n        activeEffectScope.cleanups.push(fn);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`onScopeDispose() is called when there is no active effect scope` +\n            ` to be associated with.`);\n    }\n}\n\nconst createDep = (effects) => {\n    const dep = new Set(effects);\n    dep.w = 0;\n    dep.n = 0;\n    return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].w |= trackOpBit; // set was tracked\n        }\n    }\n};\nconst finalizeDepMarkers = (effect) => {\n    const { deps } = effect;\n    if (deps.length) {\n        let ptr = 0;\n        for (let i = 0; i < deps.length; i++) {\n            const dep = deps[i];\n            if (wasTracked(dep) && !newTracked(dep)) {\n                dep.delete(effect);\n            }\n            else {\n                deps[ptr++] = dep;\n            }\n            // clear bits\n            dep.w &= ~trackOpBit;\n            dep.n &= ~trackOpBit;\n        }\n        deps.length = ptr;\n    }\n};\n\nconst targetMap = new WeakMap();\n// The number of effects currently being tracked recursively.\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\n/**\n * The bitwise track markers support at most 30 levels of recursion.\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\n * When recursion depth is greater, fall back to using a full cleanup.\n */\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\nclass ReactiveEffect {\n    constructor(fn, scheduler = null, scope) {\n        this.fn = fn;\n        this.scheduler = scheduler;\n        this.active = true;\n        this.deps = [];\n        this.parent = undefined;\n        recordEffectScope(this, scope);\n    }\n    run() {\n        if (!this.active) {\n            return this.fn();\n        }\n        let parent = activeEffect;\n        let lastShouldTrack = shouldTrack;\n        while (parent) {\n            if (parent === this) {\n                return;\n            }\n            parent = parent.parent;\n        }\n        try {\n            this.parent = activeEffect;\n            activeEffect = this;\n            shouldTrack = true;\n            trackOpBit = 1 << ++effectTrackDepth;\n            if (effectTrackDepth <= maxMarkerBits) {\n                initDepMarkers(this);\n            }\n            else {\n                cleanupEffect(this);\n            }\n            return this.fn();\n        }\n        finally {\n            if (effectTrackDepth <= maxMarkerBits) {\n                finalizeDepMarkers(this);\n            }\n            trackOpBit = 1 << --effectTrackDepth;\n            activeEffect = this.parent;\n            shouldTrack = lastShouldTrack;\n            this.parent = undefined;\n            if (this.deferStop) {\n                this.stop();\n            }\n        }\n    }\n    stop() {\n        // stopped while running itself - defer the cleanup\n        if (activeEffect === this) {\n            this.deferStop = true;\n        }\n        else if (this.active) {\n            cleanupEffect(this);\n            if (this.onStop) {\n                this.onStop();\n            }\n            this.active = false;\n        }\n    }\n}\nfunction cleanupEffect(effect) {\n    const { deps } = effect;\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].delete(effect);\n        }\n        deps.length = 0;\n    }\n}\nfunction effect(fn, options) {\n    if (fn.effect) {\n        fn = fn.effect.fn;\n    }\n    const _effect = new ReactiveEffect(fn);\n    if (options) {\n        extend(_effect, options);\n        if (options.scope)\n            recordEffectScope(_effect, options.scope);\n    }\n    if (!options || !options.lazy) {\n        _effect.run();\n    }\n    const runner = _effect.run.bind(_effect);\n    runner.effect = _effect;\n    return runner;\n}\nfunction stop(runner) {\n    runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = false;\n}\nfunction enableTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = true;\n}\nfunction resetTracking() {\n    const last = trackStack.pop();\n    shouldTrack = last === undefined ? true : last;\n}\nfunction track(target, type, key) {\n    if (shouldTrack && activeEffect) {\n        let depsMap = targetMap.get(target);\n        if (!depsMap) {\n            targetMap.set(target, (depsMap = new Map()));\n        }\n        let dep = depsMap.get(key);\n        if (!dep) {\n            depsMap.set(key, (dep = createDep()));\n        }\n        const eventInfo = (process.env.NODE_ENV !== 'production')\n            ? { effect: activeEffect, target, type, key }\n            : undefined;\n        trackEffects(dep, eventInfo);\n    }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n    let shouldTrack = false;\n    if (effectTrackDepth <= maxMarkerBits) {\n        if (!newTracked(dep)) {\n            dep.n |= trackOpBit; // set newly tracked\n            shouldTrack = !wasTracked(dep);\n        }\n    }\n    else {\n        // Full cleanup mode.\n        shouldTrack = !dep.has(activeEffect);\n    }\n    if (shouldTrack) {\n        dep.add(activeEffect);\n        activeEffect.deps.push(dep);\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\n            activeEffect.onTrack(Object.assign({ effect: activeEffect }, debuggerEventExtraInfo));\n        }\n    }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n    const depsMap = targetMap.get(target);\n    if (!depsMap) {\n        // never been tracked\n        return;\n    }\n    let deps = [];\n    if (type === \"clear\" /* TriggerOpTypes.CLEAR */) {\n        // collection being cleared\n        // trigger all effects for target\n        deps = [...depsMap.values()];\n    }\n    else if (key === 'length' && isArray(target)) {\n        const newLength = toNumber(newValue);\n        depsMap.forEach((dep, key) => {\n            if (key === 'length' || key >= newLength) {\n                deps.push(dep);\n            }\n        });\n    }\n    else {\n        // schedule runs for SET | ADD | DELETE\n        if (key !== void 0) {\n            deps.push(depsMap.get(key));\n        }\n        // also run for iteration key on ADD | DELETE | Map.SET\n        switch (type) {\n            case \"add\" /* TriggerOpTypes.ADD */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                else if (isIntegerKey(key)) {\n                    // new index added to array -> length changes\n                    deps.push(depsMap.get('length'));\n                }\n                break;\n            case \"delete\" /* TriggerOpTypes.DELETE */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                break;\n            case \"set\" /* TriggerOpTypes.SET */:\n                if (isMap(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                }\n                break;\n        }\n    }\n    const eventInfo = (process.env.NODE_ENV !== 'production')\n        ? { target, type, key, newValue, oldValue, oldTarget }\n        : undefined;\n    if (deps.length === 1) {\n        if (deps[0]) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                triggerEffects(deps[0], eventInfo);\n            }\n            else {\n                triggerEffects(deps[0]);\n            }\n        }\n    }\n    else {\n        const effects = [];\n        for (const dep of deps) {\n            if (dep) {\n                effects.push(...dep);\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            triggerEffects(createDep(effects), eventInfo);\n        }\n        else {\n            triggerEffects(createDep(effects));\n        }\n    }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n    // spread into array for stabilization\n    const effects = isArray(dep) ? dep : [...dep];\n    for (const effect of effects) {\n        if (effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n    for (const effect of effects) {\n        if (!effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n}\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\n    if (effect !== activeEffect || effect.allowRecurse) {\n        if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\n            effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\n        }\n        if (effect.scheduler) {\n            effect.scheduler();\n        }\n        else {\n            effect.run();\n        }\n    }\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n/*#__PURE__*/\nObject.getOwnPropertyNames(Symbol)\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n    // function\n    .filter(key => key !== 'arguments' && key !== 'caller')\n    .map(key => Symbol[key])\n    .filter(isSymbol));\nconst get = /*#__PURE__*/ createGetter();\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n    const instrumentations = {};\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            const arr = toRaw(this);\n            for (let i = 0, l = this.length; i < l; i++) {\n                track(arr, \"get\" /* TrackOpTypes.GET */, i + '');\n            }\n            // we run the method using the original args first (which may be reactive)\n            const res = arr[key](...args);\n            if (res === -1 || res === false) {\n                // if that didn't work, run it again using raw values.\n                return arr[key](...args.map(toRaw));\n            }\n            else {\n                return res;\n            }\n        };\n    });\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            pauseTracking();\n            const res = toRaw(this)[key].apply(this, args);\n            resetTracking();\n            return res;\n        };\n    });\n    return instrumentations;\n}\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === \"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */) {\n            return shallow;\n        }\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */ &&\n            receiver ===\n                (isReadonly\n                    ? shallow\n                        ? shallowReadonlyMap\n                        : readonlyMap\n                    : shallow\n                        ? shallowReactiveMap\n                        : reactiveMap).get(target)) {\n            return target;\n        }\n        const targetIsArray = isArray(target);\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\n            return Reflect.get(arrayInstrumentations, key, receiver);\n        }\n        const res = Reflect.get(target, key, receiver);\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n            return res;\n        }\n        if (!isReadonly) {\n            track(target, \"get\" /* TrackOpTypes.GET */, key);\n        }\n        if (shallow) {\n            return res;\n        }\n        if (isRef(res)) {\n            // ref unwrapping - skip unwrap for Array + integer key.\n            return targetIsArray && isIntegerKey(key) ? res : res.value;\n        }\n        if (isObject(res)) {\n            // Convert returned value into a proxy as well. we do the isObject check\n            // here to avoid invalid value warning. Also need to lazy access readonly\n            // and reactive here to avoid circular dependency.\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    };\n}\nconst set = /*#__PURE__*/ createSetter();\nconst shallowSet = /*#__PURE__*/ createSetter(true);\nfunction createSetter(shallow = false) {\n    return function set(target, key, value, receiver) {\n        let oldValue = target[key];\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n            return false;\n        }\n        if (!shallow) {\n            if (!isShallow(value) && !isReadonly(value)) {\n                oldValue = toRaw(oldValue);\n                value = toRaw(value);\n            }\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n                oldValue.value = value;\n                return true;\n            }\n        }\n        const hadKey = isArray(target) && isIntegerKey(key)\n            ? Number(key) < target.length\n            : hasOwn(target, key);\n        const result = Reflect.set(target, key, value, receiver);\n        // don't trigger if target is something up in the prototype chain of original\n        if (target === toRaw(receiver)) {\n            if (!hadKey) {\n                trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\n            }\n            else if (hasChanged(value, oldValue)) {\n                trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\n            }\n        }\n        return result;\n    };\n}\nfunction deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n        track(target, \"has\" /* TrackOpTypes.HAS */, key);\n    }\n    return result;\n}\nfunction ownKeys(target) {\n    track(target, \"iterate\" /* TrackOpTypes.ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\n    return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n    get,\n    set,\n    deleteProperty,\n    has,\n    ownKeys\n};\nconst readonlyHandlers = {\n    get: readonlyGet,\n    set(target, key) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    },\n    deleteProperty(target, key) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    }\n};\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\n    get: shallowGet,\n    set: shallowSet\n});\n// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\n    get: shallowReadonlyGet\n});\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\n    // of the value\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, \"get\" /* TrackOpTypes.GET */, key);\n        }\n        track(rawTarget, \"get\" /* TrackOpTypes.GET */, rawKey);\n    }\n    const { has } = getProto(rawTarget);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    if (has.call(rawTarget, key)) {\n        return wrap(target.get(key));\n    }\n    else if (has.call(rawTarget, rawKey)) {\n        return wrap(target.get(rawKey));\n    }\n    else if (target !== rawTarget) {\n        // #3602 readonly(reactive(Map))\n        // ensure that the nested reactive `Map` can do tracking for itself\n        target.get(key);\n    }\n}\nfunction has$1(key, isReadonly = false) {\n    const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, \"has\" /* TrackOpTypes.HAS */, key);\n        }\n        track(rawTarget, \"has\" /* TrackOpTypes.HAS */, rawKey);\n    }\n    return key === rawKey\n        ? target.has(key)\n        : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\n    !isReadonly && track(toRaw(target), \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n    return Reflect.get(target, 'size', target);\n}\nfunction add(value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const proto = getProto(target);\n    const hadKey = proto.has.call(target, value);\n    if (!hadKey) {\n        target.add(value);\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, value, value);\n    }\n    return this;\n}\nfunction set$1(key, value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get.call(target, key);\n    target.set(key, value);\n    if (!hadKey) {\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\n    }\n    else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\n    }\n    return this;\n}\nfunction deleteEntry(key) {\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get ? get.call(target, key) : undefined;\n    // forward the operation before queueing reactions\n    const result = target.delete(key);\n    if (hadKey) {\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction clear() {\n    const target = toRaw(this);\n    const hadItems = target.size !== 0;\n    const oldTarget = (process.env.NODE_ENV !== 'production')\n        ? isMap(target)\n            ? new Map(target)\n            : new Set(target)\n        : undefined;\n    // forward the operation before queueing reactions\n    const result = target.clear();\n    if (hadItems) {\n        trigger(target, \"clear\" /* TriggerOpTypes.CLEAR */, undefined, undefined, oldTarget);\n    }\n    return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n    return function forEach(callback, thisArg) {\n        const observed = this;\n        const target = observed[\"__v_raw\" /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly && track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n        return target.forEach((value, key) => {\n            // important: make sure the callback is\n            // 1. invoked with the reactive map as `this` and 3rd arg\n            // 2. the value received should be a corresponding reactive/readonly.\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\n        });\n    };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n    return function (...args) {\n        const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const targetIsMap = isMap(rawTarget);\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\n        const isKeyOnly = method === 'keys' && targetIsMap;\n        const innerIterator = target[method](...args);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly &&\n            track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n        // return a wrapped iterator which returns observed versions of the\n        // values emitted from the real iterator\n        return {\n            // iterator protocol\n            next() {\n                const { value, done } = innerIterator.next();\n                return done\n                    ? { value, done }\n                    : {\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n                        done\n                    };\n            },\n            // iterable protocol\n            [Symbol.iterator]() {\n                return this;\n            }\n        };\n    };\n}\nfunction createReadonlyMethod(type) {\n    return function (...args) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\n        }\n        return type === \"delete\" /* TriggerOpTypes.DELETE */ ? false : this;\n    };\n}\nfunction createInstrumentations() {\n    const mutableInstrumentations = {\n        get(key) {\n            return get$1(this, key);\n        },\n        get size() {\n            return size(this);\n        },\n        has: has$1,\n        add,\n        set: set$1,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, false)\n    };\n    const shallowInstrumentations = {\n        get(key) {\n            return get$1(this, key, false, true);\n        },\n        get size() {\n            return size(this);\n        },\n        has: has$1,\n        add,\n        set: set$1,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, true)\n    };\n    const readonlyInstrumentations = {\n        get(key) {\n            return get$1(this, key, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has$1.call(this, key, true);\n        },\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, false)\n    };\n    const shallowReadonlyInstrumentations = {\n        get(key) {\n            return get$1(this, key, true, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has$1.call(this, key, true);\n        },\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, true)\n    };\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n    iteratorMethods.forEach(method => {\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n    });\n    return [\n        mutableInstrumentations,\n        readonlyInstrumentations,\n        shallowInstrumentations,\n        shallowReadonlyInstrumentations\n    ];\n}\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n    const instrumentations = shallow\n        ? isReadonly\n            ? shallowReadonlyInstrumentations\n            : shallowInstrumentations\n        : isReadonly\n            ? readonlyInstrumentations\n            : mutableInstrumentations;\n    return (target, key, receiver) => {\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */) {\n            return target;\n        }\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\n            ? instrumentations\n            : target, key, receiver);\n    };\n}\nconst mutableCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has, key) {\n    const rawKey = toRaw(key);\n    if (rawKey !== key && has.call(target, rawKey)) {\n        const type = toRawType(target);\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\n            `which can lead to inconsistencies. ` +\n            `Avoid differentiating between the raw and reactive versions ` +\n            `of an object and only use the reactive version if possible.`);\n    }\n}\n\nconst reactiveMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\nfunction targetTypeMap(rawType) {\n    switch (rawType) {\n        case 'Object':\n        case 'Array':\n            return 1 /* TargetType.COMMON */;\n        case 'Map':\n        case 'Set':\n        case 'WeakMap':\n        case 'WeakSet':\n            return 2 /* TargetType.COLLECTION */;\n        default:\n            return 0 /* TargetType.INVALID */;\n    }\n}\nfunction getTargetType(value) {\n    return value[\"__v_skip\" /* ReactiveFlags.SKIP */] || !Object.isExtensible(value)\n        ? 0 /* TargetType.INVALID */\n        : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n    // if trying to observe a readonly proxy, return the readonly version.\n    if (isReadonly(target)) {\n        return target;\n    }\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\n * Return a shallowly-reactive copy of the original object, where only the root\n * level properties are reactive. It also does not auto-unwrap refs (even at the\n * root level).\n */\nfunction shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\n * Creates a readonly copy of the original object. Note the returned copy is not\n * made reactive, but `readonly` can be called on an already reactive object.\n */\nfunction readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\n * Returns a reactive-copy of the original object, where only the root level\n * properties are readonly, and does NOT unwrap refs nor recursively convert\n * returned properties.\n * This is used for creating the props proxy object for stateful components.\n */\nfunction shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n    if (!isObject(target)) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            console.warn(`value cannot be made reactive: ${String(target)}`);\n        }\n        return target;\n    }\n    // target is already a Proxy, return it.\n    // exception: calling readonly() on a reactive object\n    if (target[\"__v_raw\" /* ReactiveFlags.RAW */] &&\n        !(isReadonly && target[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */])) {\n        return target;\n    }\n    // target already has corresponding Proxy\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        return existingProxy;\n    }\n    // only specific value types can be observed.\n    const targetType = getTargetType(target);\n    if (targetType === 0 /* TargetType.INVALID */) {\n        return target;\n    }\n    const proxy = new Proxy(target, targetType === 2 /* TargetType.COLLECTION */ ? collectionHandlers : baseHandlers);\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nfunction isReactive(value) {\n    if (isReadonly(value)) {\n        return isReactive(value[\"__v_raw\" /* ReactiveFlags.RAW */]);\n    }\n    return !!(value && value[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */]);\n}\nfunction isReadonly(value) {\n    return !!(value && value[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */]);\n}\nfunction isShallow(value) {\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\n}\nfunction isProxy(value) {\n    return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n    const raw = observed && observed[\"__v_raw\" /* ReactiveFlags.RAW */];\n    return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n    def(value, \"__v_skip\" /* ReactiveFlags.SKIP */, true);\n    return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\n    if (shouldTrack && activeEffect) {\n        ref = toRaw(ref);\n        if ((process.env.NODE_ENV !== 'production')) {\n            trackEffects(ref.dep || (ref.dep = createDep()), {\n                target: ref,\n                type: \"get\" /* TrackOpTypes.GET */,\n                key: 'value'\n            });\n        }\n        else {\n            trackEffects(ref.dep || (ref.dep = createDep()));\n        }\n    }\n}\nfunction triggerRefValue(ref, newVal) {\n    ref = toRaw(ref);\n    if (ref.dep) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            triggerEffects(ref.dep, {\n                target: ref,\n                type: \"set\" /* TriggerOpTypes.SET */,\n                key: 'value',\n                newValue: newVal\n            });\n        }\n        else {\n            triggerEffects(ref.dep);\n        }\n    }\n}\nfunction isRef(r) {\n    return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n    return createRef(value, false);\n}\nfunction shallowRef(value) {\n    return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n    if (isRef(rawValue)) {\n        return rawValue;\n    }\n    return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n    constructor(value, __v_isShallow) {\n        this.__v_isShallow = __v_isShallow;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this._rawValue = __v_isShallow ? value : toRaw(value);\n        this._value = __v_isShallow ? value : toReactive(value);\n    }\n    get value() {\n        trackRefValue(this);\n        return this._value;\n    }\n    set value(newVal) {\n        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n        newVal = useDirectValue ? newVal : toRaw(newVal);\n        if (hasChanged(newVal, this._rawValue)) {\n            this._rawValue = newVal;\n            this._value = useDirectValue ? newVal : toReactive(newVal);\n            triggerRefValue(this, newVal);\n        }\n    }\n}\nfunction triggerRef(ref) {\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\n}\nfunction unref(ref) {\n    return isRef(ref) ? ref.value : ref;\n}\nconst shallowUnwrapHandlers = {\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n    set: (target, key, value, receiver) => {\n        const oldValue = target[key];\n        if (isRef(oldValue) && !isRef(value)) {\n            oldValue.value = value;\n            return true;\n        }\n        else {\n            return Reflect.set(target, key, value, receiver);\n        }\n    }\n};\nfunction proxyRefs(objectWithRefs) {\n    return isReactive(objectWithRefs)\n        ? objectWithRefs\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n    constructor(factory) {\n        this.dep = undefined;\n        this.__v_isRef = true;\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\n        this._get = get;\n        this._set = set;\n    }\n    get value() {\n        return this._get();\n    }\n    set value(newVal) {\n        this._set(newVal);\n    }\n}\nfunction customRef(factory) {\n    return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\n    }\n    const ret = isArray(object) ? new Array(object.length) : {};\n    for (const key in object) {\n        ret[key] = toRef(object, key);\n    }\n    return ret;\n}\nclass ObjectRefImpl {\n    constructor(_object, _key, _defaultValue) {\n        this._object = _object;\n        this._key = _key;\n        this._defaultValue = _defaultValue;\n        this.__v_isRef = true;\n    }\n    get value() {\n        const val = this._object[this._key];\n        return val === undefined ? this._defaultValue : val;\n    }\n    set value(newVal) {\n        this._object[this._key] = newVal;\n    }\n}\nfunction toRef(object, key, defaultValue) {\n    const val = object[key];\n    return isRef(val)\n        ? val\n        : new ObjectRefImpl(object, key, defaultValue);\n}\n\nvar _a;\nclass ComputedRefImpl {\n    constructor(getter, _setter, isReadonly, isSSR) {\n        this._setter = _setter;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this[_a] = false;\n        this._dirty = true;\n        this.effect = new ReactiveEffect(getter, () => {\n            if (!this._dirty) {\n                this._dirty = true;\n                triggerRefValue(this);\n            }\n        });\n        this.effect.computed = this;\n        this.effect.active = this._cacheable = !isSSR;\n        this[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */] = isReadonly;\n    }\n    get value() {\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        const self = toRaw(this);\n        trackRefValue(self);\n        if (self._dirty || !self._cacheable) {\n            self._dirty = false;\n            self._value = self.effect.run();\n        }\n        return self._value;\n    }\n    set value(newValue) {\n        this._setter(newValue);\n    }\n}\n_a = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n    let getter;\n    let setter;\n    const onlyGetter = isFunction(getterOrOptions);\n    if (onlyGetter) {\n        getter = getterOrOptions;\n        setter = (process.env.NODE_ENV !== 'production')\n            ? () => {\n                console.warn('Write operation failed: computed value is readonly');\n            }\n            : NOOP;\n    }\n    else {\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    }\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n    if ((process.env.NODE_ENV !== 'production') && debugOptions && !isSSR) {\n        cRef.effect.onTrack = debugOptions.onTrack;\n        cRef.effect.onTrigger = debugOptions.onTrigger;\n    }\n    return cRef;\n}\n\nvar _a$1;\nconst tick = /*#__PURE__*/ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n    queue.push(fn);\n    if (!queued) {\n        queued = true;\n        tick.then(flush);\n    }\n};\nconst flush = () => {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i]();\n    }\n    queue.length = 0;\n    queued = false;\n};\nclass DeferredComputedRefImpl {\n    constructor(getter) {\n        this.dep = undefined;\n        this._dirty = true;\n        this.__v_isRef = true;\n        this[_a$1] = true;\n        let compareTarget;\n        let hasCompareTarget = false;\n        let scheduled = false;\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n            if (this.dep) {\n                if (computedTrigger) {\n                    compareTarget = this._value;\n                    hasCompareTarget = true;\n                }\n                else if (!scheduled) {\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n                    scheduled = true;\n                    hasCompareTarget = false;\n                    scheduler(() => {\n                        if (this.effect.active && this._get() !== valueToCompare) {\n                            triggerRefValue(this);\n                        }\n                        scheduled = false;\n                    });\n                }\n                // chained upstream computeds are notified synchronously to ensure\n                // value invalidation in case of sync access; normal effects are\n                // deferred to be triggered in scheduler.\n                for (const e of this.dep) {\n                    if (e.computed instanceof DeferredComputedRefImpl) {\n                        e.scheduler(true /* computedTrigger */);\n                    }\n                }\n            }\n            this._dirty = true;\n        });\n        this.effect.computed = this;\n    }\n    _get() {\n        if (this._dirty) {\n            this._dirty = false;\n            return (this._value = this.effect.run());\n        }\n        return this._value;\n    }\n    get value() {\n        trackRefValue(this);\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        return toRaw(this)._get();\n    }\n}\n_a$1 = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\nfunction deferredComputed(getter) {\n    return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n"]},"metadata":{},"sourceType":"module"}