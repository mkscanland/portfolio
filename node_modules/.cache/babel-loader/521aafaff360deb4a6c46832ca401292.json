{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap\";\nimport $ from 'jquery';\ncreateApp(App).mount('#app');\nconst infoBodies = {\n  \"leave\": {\n    \"intro\": \"The Internal Leave system allows students to quickly input vacation and business travel requests for advisor approval. Once approved, staff can search, sort, modify, and delete any requests without page reloads. The system also calculates individual leave for each student and determines if they are over their maximum allowed leave for that leave period.\\n\\n\",\n    \"details\": \"test\"\n  },\n  \"checkout\": \"The Checkout Tracker allows staff and faculty an instant view of where a student is in the process of leaving CPES. Some necessary information from the student is collected upon submission. The system is simple and checks the latest status of a checkout to show which step it is on. A query to the model shows if a student has submitted their Thesis/Dissertation to the uploading system.\\n\",\n  \"purchasing\": \"The Purchasing system currently has three functionalities: Purchases, Reimbursements, and Travel Reimbursements. Each system is similarly built. The user inputs a request for one of the previously mentioned functions and that requests goes through a chain of approvals. The tracker for each function has several stages that a request can be at. These requests can be searched and sorted. The system processes over 10k requests a year.\\n\",\n  \"reservations\": \"Room Reservations and HPC Reservations both use the FullCalendar Event Calendar. Users can reserve a time in a conference room or time on our HPCs (High Performance Computers). A user can reserve a single day, or recurring days for a specific time period. All reservations are stored in the database and pulled dynamically depending on which date is selected. If the Zoom Room (143) is selected a meeting link is added to the Zoom Room Google Calendar to easily start the meeting.\\n\",\n  \"uploading\": \"Students and Faculty can upload their publications to the uploading system for easy archiving. Once uploaded any user can view the archives by using the search functionality. Using a fuzzy search the user can select any date, category, or specific metadata to fine tune their search. If a user makes a mistake and needs to re-upload a document, that can be done on any individual archive page.\\n\",\n  \"documents\": \"Document info is uploaded via XMLHttpRequests which is handeled by common PHP and JS classes for all documents on the Support website. These documents are retrieved and served via PHP after checking user authentication.\\n\"\n};\nconsole.log(infoBodies.leave);\n$(\".projectContainer.hasMore\").not(\"a\").on(\"click\", function () {\n  var imgSrc = $(this).find(\"img\").attr('src');\n  var projectTitle = $(this).find(\".projectTitle\").text();\n  var projectId = $(this).attr('id');\n  $(\"#infoModalTitle\").html(projectTitle);\n  $(\"#infoModal .modal-body .intro\").html(infoBodies[projectId][\"intro\"].replace(/\\n/g, '<br>'));\n  $(\"#infoModal .modal-body .details\").html(infoBodies[projectId][\"details\"].replace(/\\n/g, '<br>'));\n  $(\"#infoModalBody img\").attr('src', imgSrc);\n  console.log(imgSrc);\n  console.log(projectId);\n  console.log(projectTitle);\n});","map":{"version":3,"sources":["C:/VueProjects/portfolio/src/pages/WebApplications/main.js"],"names":["createApp","App","$","mount","infoBodies","console","log","leave","not","on","imgSrc","find","attr","projectTitle","text","projectId","html","replace"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AAEAF,SAAS,CAACC,GAAD,CAAT,CAAeE,KAAf,CAAqB,MAArB;AAEA,MAAMC,UAAU,GAAG;AACd,WAAQ;AACP,aAAQ,yWADD;AAEP,eAAU;AAFH,GADM;AAKd,cAAW,uYALG;AAMd,gBAAa,sbANC;AAOd,kBAAe,oeAPD;AAQd,eAAY,6YARE;AASd,eAAY;AATE,CAAnB;AAWAC,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACG,KAAvB;AAEAL,CAAC,CAAC,2BAAD,CAAD,CAA+BM,GAA/B,CAAmC,GAAnC,EAAwCC,EAAxC,CAA2C,OAA3C,EAAoD,YAAU;AAC7D,MAAIC,MAAM,GAAGR,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,KAAb,EAAoBC,IAApB,CAAyB,KAAzB,CAAb;AACA,MAAIC,YAAY,GAAGX,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,eAAb,EAA8BG,IAA9B,EAAnB;AACA,MAAIC,SAAS,GAAGb,CAAC,CAAC,IAAD,CAAD,CAAQU,IAAR,CAAa,IAAb,CAAhB;AACAV,EAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBc,IAArB,CAA0BH,YAA1B;AACAX,EAAAA,CAAC,CAAC,+BAAD,CAAD,CAAmCc,IAAnC,CAAwCZ,UAAU,CAACW,SAAD,CAAV,CAAsB,OAAtB,EAA+BE,OAA/B,CAAuC,KAAvC,EAA8C,MAA9C,CAAxC;AACAf,EAAAA,CAAC,CAAC,iCAAD,CAAD,CAAqCc,IAArC,CAA0CZ,UAAU,CAACW,SAAD,CAAV,CAAsB,SAAtB,EAAiCE,OAAjC,CAAyC,KAAzC,EAAgD,MAAhD,CAA1C;AACAf,EAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBU,IAAxB,CAA6B,KAA7B,EAAoCF,MAApC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACA,CAXD","sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap\"\nimport $ from 'jquery'\n\ncreateApp(App).mount('#app')\n\nconst infoBodies = {\n\t\t\t\t\t\"leave\":{\n\t\t\t\t\t\t\"intro\":\"The Internal Leave system allows students to quickly input vacation and business travel requests for advisor approval. Once approved, staff can search, sort, modify, and delete any requests without page reloads. The system also calculates individual leave for each student and determines if they are over their maximum allowed leave for that leave period.\\n\\n\",\n\t\t\t\t\t\t\"details\":\"test\"\n\t\t\t\t\t},\n\t\t\t\t\t\"checkout\":\"The Checkout Tracker allows staff and faculty an instant view of where a student is in the process of leaving CPES. Some necessary information from the student is collected upon submission. The system is simple and checks the latest status of a checkout to show which step it is on. A query to the model shows if a student has submitted their Thesis/Dissertation to the uploading system.\\n\",\n\t\t\t\t\t\"purchasing\":\"The Purchasing system currently has three functionalities: Purchases, Reimbursements, and Travel Reimbursements. Each system is similarly built. The user inputs a request for one of the previously mentioned functions and that requests goes through a chain of approvals. The tracker for each function has several stages that a request can be at. These requests can be searched and sorted. The system processes over 10k requests a year.\\n\",\n\t\t\t\t\t\"reservations\":\"Room Reservations and HPC Reservations both use the FullCalendar Event Calendar. Users can reserve a time in a conference room or time on our HPCs (High Performance Computers). A user can reserve a single day, or recurring days for a specific time period. All reservations are stored in the database and pulled dynamically depending on which date is selected. If the Zoom Room (143) is selected a meeting link is added to the Zoom Room Google Calendar to easily start the meeting.\\n\",\n\t\t\t\t\t\"uploading\":\"Students and Faculty can upload their publications to the uploading system for easy archiving. Once uploaded any user can view the archives by using the search functionality. Using a fuzzy search the user can select any date, category, or specific metadata to fine tune their search. If a user makes a mistake and needs to re-upload a document, that can be done on any individual archive page.\\n\",\n\t\t\t\t\t\"documents\":\"Document info is uploaded via XMLHttpRequests which is handeled by common PHP and JS classes for all documents on the Support website. These documents are retrieved and served via PHP after checking user authentication.\\n\",\n\t\t\t\t\t};\nconsole.log(infoBodies.leave);\n\n$(\".projectContainer.hasMore\").not(\"a\").on(\"click\", function(){\n\tvar imgSrc = $(this).find(\"img\").attr('src');\n\tvar projectTitle = $(this).find(\".projectTitle\").text();\n\tvar projectId = $(this).attr('id');\n\t$(\"#infoModalTitle\").html(projectTitle);\n\t$(\"#infoModal .modal-body .intro\").html(infoBodies[projectId][\"intro\"].replace(/\\n/g, '<br>'));\n\t$(\"#infoModal .modal-body .details\").html(infoBodies[projectId][\"details\"].replace(/\\n/g, '<br>'));\n\t$(\"#infoModalBody img\").attr('src', imgSrc);\n\tconsole.log(imgSrc);\n\tconsole.log(projectId);\n\tconsole.log(projectTitle);\n});"]},"metadata":{},"sourceType":"module"}